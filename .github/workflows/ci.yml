name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '21'

      - name: Create Databases
        run: |
          docker exec -u postgres $(docker ps -q -f ancestor=postgres:latest) psql -c "CREATE DATABASE \"program-creation\";"
          docker exec -u postgres $(docker ps -q -f ancestor=postgres:latest) psql -c "CREATE DATABASE \"assessment-creation\";"

      - name: Start Program Management Service
        run: |
          mvn -f skillspace-backend/program-management-service/pom.xml spring-boot:run -Djava.version=21 &
          sleep 30  # Give the service time to start up

      - name: Start Assessment Creation Service
        run: |
          mvn -f skillspace-backend/assessment-service/pom.xml spring-boot:run -Djava.version=21 &
          sleep 30  # Give the service time to start up

      - name: Run API Tests
        run: |
          mvn -pl :api-tests -am clean test

      - name: Slack Notification
        uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps:  ${{toJson(steps)}}
          text: 'Pipeline finished with status: ${{ job.status }}'
          channel: '#skillspace-project-build-notifications'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()
